;;;;;
title: Git For Dummies...
tags: Programming
date: 2009-10-22 19:53:02
format: html
;;;;;
A friend asked me for a simple tutorial. So here one is. Also, just because I can:<br><br>My workflow roughly looks like:<br><code><br>Start or clone git repository: [git clone $URL] OR [mkdir project; cd project; git init]<br>Make some changes: HACK HACK HACK, ensure the files are tracked: [git add $FILES]<br>Review my changes: [git status], [git diff]<br>Uh oh, a choice!: if (I like these changes)<br>                           then [git commit] // ideally, your $EDITOR environment variable is set to the editor you like.<br>                           else [git checkout -- $FILES] // yes, the dashes should literally be there. this reverts the files to the last commit's state.<br>Repeat.<br></code><br><br>I didn't cover pushing and pulling (collaborating) or branching above (working on separate features simultaneously).<br>Let's do that now:<br><code><br>Get a list of branches and show the current branch: [git branch]<br>Start a new branch to work on: [git branch $NAME]<br>Switch to a different branch: [git checkout $NAME]<br>Delete a branch you don't want anymore or are finished with: [git branch -d $NAME]<br>Merge changes from one branch into another branch: [git merge $SENDER $RECIPIENT] // Branch recipient gets senders changes.<br>List tracked repos (online, github, etc): [git remote]<br>Track a friends repo (or one online, github, etc): [git remote add $URL]<br>Send your changes to a repo you have write access to: [git push $REMOTE $NAME] /* remote can be a url or one of your remotes.<br>                                                                                                                 name is a branch on your machine. note that master is a branch. */<br>Retrieve and merge in a friends changes: [git pull $REMOTE $NAME]<br></code><br>There are a bunch of blog tutorials. The best way to find them is to go to programming.reddit.com and search for "git tutorial" or "git intro".<br><br>Other than that, there are two free git books I know of:<br>Pro Git - http://progit.org/book/<br>The Git Community Book - http://book.git-scm.com/
