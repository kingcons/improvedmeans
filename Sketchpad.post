;;;;;
title: Sketchpad
tags: Erlang, Milosz, Programming Languages, Quotes
date: 2007-09-12 18:34:12
format: html
;;;;;
I was watching an <a href="http://channel9.msdn.com/Showpost.aspx?postid=326762">interesting video</a> this morning and had some thoughts I jotted down before class. I am reproducing them in their full, unsubstantiated, and provocative/controversial nature here. Later perhaps they will contribute to something a bit more formal. Note: The video features Simon Peyton-Jones talking about programming language evolution somewhat generally. I'd much rather him speak more about that stuff than the Haskell/STM talks he gave at OSCON. Hmm.<br><br>I promise I'll post something less disjointed and more intelligible/coherent/formal than this in the near future.<br><br>Notes:<br>Referencing Upcoming Radical Visions Essay, Trend A: Moving Away From X86<br>Facet 1) Hardware.<br><br>I'm sick of people poo-pooing the "concurrency crisis". To be fair, concurrency is the straw breaking the camel's back. To maintain sustainable growth in the computer industry we're having to do, as always, radical things on the hardware side. Not as always, however, is the fact that they're forcing lots of change in software/CS at the same time.<br><br>Is Erlang brilliant? Maybe. Is Erlang fortuitous? Certainly. It is probably the best option for the concurrency problem at hand. I'm not convinced that Scala or F# compare. Or Haskell for that matter. Haskell is a different sort of win.<br><br>We need concurrency more than controlled effects through a type system at present. The need for Haskell is still further out. Still less urgent.<br><br>^That's it. We're having two different conversations trying to discuss what the more urgent issue is. It's not Erlang vs. Haskell. It's concurrency vs. limited effects.<br><br>But what of (insert professor/coder name here)? What of those that are uninformed? Hell, what about (insert coder name here). What will they do when their code is sitting around not scaling to available resources?<br><br>Tertiary snippets:<br>Syntax is not semantics. Can we mistake it for such? Of course, but what does that look like? What is it to mistake syntax for semantics?<br><br>"That boy, does he already suspect that beauty is always elsewhere and always delusive?" - Czeslaw Milosz, New and Collected Poems, p. 284
