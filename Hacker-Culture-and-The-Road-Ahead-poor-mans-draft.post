;;;;;
title: Hacker Culture and The Road Ahead (poor manâ€™s draft)
tags: Open Source, Operating Systems
date: 2007-07-04 19:24:00
format: html
;;;;;
<p style="margin-bottom: 0in">Of late there has been a growing awareness and concern over the migration of applications from our desktops onto the Internet and the emergence and rise of Software-as-a-Service (SaaS) along with a consequent deluge of predictions about the death (or irrelevance) of the desktop. While these discussions are not without merit I feel they share some general flaws in approach which I seek to address here.</p><br><p style="margin-bottom: 0in">One of the hard parts about engaging in such discussions is that they do not constrain themselves to a purely technical realm. Much about the Hacker Culture is, or was, revolutionary due to it's contribution to the larger movements of desktop computing and the internet and this awareness of prior revolutionary behavior coupled with the endless proclamations of revolution in the industry that pass for marketing lead to a confused understanding of what revolutions really did occur, where they have led us, and what might lie on the road ahead.</p><br>Thanks to the general muddiness of these still fresh (and some would say ongoing) revolutions, discussions about something as simple as the migration of applications and functionality from a local machine to a networked server bring with them issues of law, technology, history, politics, economics, marketing, sociology, and innovation. The capacity for simple discussion of events as they are has become impossible. Given this state of affairs, I will do my best (through my biases, which are many) to sort through the rabble.<br><br>Most responses to the statement that applications are moving from the desktop to the web fall into one of two camps. The first being that the desktop is as important as it's always been and\or that the web isn't significantly infringing on the desktop's importance and functionality. The second response is that there are no open source web services and open source needs to figure out how to compete in this new emerging market. Both are knee jerk reactions, one just comes from a position of invulnerability or incredulity while another comes from a position of fear or paranoia.<br><br>Before going any further I'd like to state some of my assumptions and\or biases. First, the desktop is changing. There are some forces undoubtedly at work that change the extent to which our data and applications are local and thus our computer is losing some of it's centrality and being distributed out on "the grid" of the internet. Second, the desktop hasn't changed. This may seem contradictory to the first assumption but I don't think it is.<br><br>What I mean essentially by this is that the next paradigm beyond that of the desktop, GUI, keyboard and mouse hasn't arrived yet and until it does things largely will be the same. We will still need an OS to talk to the hardware and software besides a browser to do many things we do, especially given that high speed internet access is not yet available everywhere all the time. Finally, while the next paradigm beyond that of the desktop may presently exist in the wild we cannot distinguish it as the next paradigm until it has already run it's course. We will not know the world has changed until it has.<br><br>In terms of the responses to the idea that applications are moving webward, I'd like to start with Perspective A. The person who believes Perspective A thinks that the desktop isn't changing or that it's functionality and importance aren't threatened by the rise of web applications. I'd like to refute this by offering myself as a personal example. I've never used a mail client. Ever. Thunderbird, Outlook, Evolution, iMail, any of it. All my e-mail has always been webmail and even trying to think of e-mail as being an offline phenomena that I have saved locally to look at when I'm offline is an odd and foreign concept. The idea of a mail client is, for me, irrelevant. I think that's enough to show that the desktop is changing.<br><br>Now to address Perspective B. The person who believes Perspective B believes that Open Source will lose relevance in a world where net-accessible advertising-sponsored software (gmail) is available if Open Source does not create equivalent software. This is misguided on a number of levels. Not least of which is related to the fact that open source emerged in response to a lack of Richard Stallman's access to printer drivers. The scratch your own itch element of web services is not available. There is no platform to begin copying. There is no central service upon which other services are built besides the backbone of the net itself, which is just Linux Clusters anyway. There isn't a Unix to begin copying.<br><br>A lack of a target is no small problem. The initial starting goal of developing a UNIX-like Operating Environment was crucial to open source getting off the ground in a meaningful way, at least as far as Linux is concerned. There is no web equivalent. The problems run deeper than this though and can be drawn out further by remembering the early moniker of free software. Freedom to modify is not a valid goal of a webapp and not only because of the client-server model. Web software doesn't sleep. It's always live and there are always users. This wouldn't be a large problem given the nature of SCMs like bazaar today. Just create a new branch. And yet the notion of a server trying to run multiple versions of a web app or service is simply ludicrous. The notion that Facebook as a platform is a walled garden is not necessarily misguided if applied liberally to other web apps. Freedom of data can be a concern but on the web freedom of code will have to take on a new form. Perhaps this is a problem we should confront.<br><br>And whereas the 80s and 90s left hackers free to tinker with little consequence for the majority of the world the extent to which the personal computer has invaded the workings of human civilization make even minor undertakings more serious in influence than the GNU C Compiler was the day it was started. Finally, the entire conversation is too wrapped up in notions of maintaining relevance and influence. Open Source at last has something to lose even if it's legacy is invulnerable. Whatever emerges next will emerge independent of our actions. Hopefully we will see it coming and aid it's rise or even have a hand in it but we cannot act out of fear. Tinkering away like a bunch of crazed kids with legos got us here and it will get us wherever there is too. Even if open source loses the war over code, the inroads made in the war over organizing methods or production are likely to change the face of the society.<br><br>********************************NOTES********************************<br><br>tech thoughts (mac\linux, web\desktop, ubiquitous computing\pc). it's really about time i wrote something on open APIs and web\desktop. can open source happen on the web? linus made a replacement for unix. there is no central web app\top\thing to replicate in this fashion.<br>things to tackle:<br>hacker culture came from academic underground. tinkerers. web 2.0 came from where?<br><br>people think open source should "compete" but with what? the only thing to compete with that even approaches web platform status in the way unix approached workstation platform status is google. how do hackers compete with that exactly? there is no web 2.0 target the way there was a unix OS target. and are all web app vendors now just walled gardens, facebook is aol, etc? that's weird. that doesn't make sense. but really the only unwalled web garden is the browser. and that's on the desktop.<br><br>what about the politics of all this? the politics then in the 70s\80s\early 90s and the politics of technology now? it's gone from nobody caring to tons of people. it affects everyone now. we have to have a goal to move into this new space.<br><br>open source as a method of production versus open source as tools of production. most of the tools of production are already in existence. the web apps simply apply open source production methodologies to already existing tools of production. the web IS open source. stop yelling about the proprietary web. when we're speaking about open source on the web we can only be worried about one of three things. legal data\property squabbles, the tools themselves (apps), or the methods (open source\social web\web 2.0).<br><br>also, modifying services to work on your own server the way we used to modify code on our own systems requires the server infrastructure in the first place which few people have. plus i would assume it contributes to a loss in the network effects of web apps.<br><br>how does fear\relevance\influence play into things? are we afraid of microsoft, google, etc? were we then? what are we struggling against? a lot of maneuvering seems to be about inert versus potent forces. microsoft is pretty impotent and google is clearly the next 800-pound gorilla but what is the thing people are afraid of?<br><br>finally, there is a difference between the significance of platforms\communities\ecosystems and the things we fear and the next big thing. product life cycles account for something here. the OS isn't a point of competition anymore. it's not a market with billions in it. it's not hot and it's not a point of innovation. it's in the background. even with apple it's 90% background. applications are mostly background too. there are cms and crm and inventory and other business apps and integrated suites that are still relevant but it's not what i'd call a point of innovation.
