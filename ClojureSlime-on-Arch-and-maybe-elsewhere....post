;;;;;
title: Clojure/Slime on Arch (and maybe elsewhere)...
tags: Programming
date: 2010-05-22 13:00:56
format: html
;;;;;
This is just a quick configuration post. Â On <a href="http://archlinux.org/">Archlinux</a>, <a href="http://aur.archlinux.org/packages.php?ID=22530">clojure</a>, <a href="http://aur.archlinux.org/packages.php?ID=35340">clojure-contrib</a> and <a href="http://aur.archlinux.org/packages.php?ID=22205&amp;detail=0">swank-clojure-git</a> packages are already available from the <a href="http://wiki.archlinux.org/index.php/Arch_User_Repository">AUR</a>. I'm a big fan of Common Lisp and use it for most of my programming, so I wanted to be able to use any of the 3 common lisp implementations installed from distro packages along with SBCL git built with <a href="http://common-lisp.net/project/clbuild/">clbuild</a> or clojure without much fuss. Though there are <a href="http://disclojure.org/where-to-start/">a</a> <a href="http://riddell.us/ClojureWithEmacsSlimeSwankOnUbuntu.html">fair</a> <a href="http://felipero.com/1446961">number</a> of articles on clojure/emacs/slime setup and still more a google search away, I found it a bit of a pain to get things going the way I wanted.<br><br>I can't vouch for whether or not this will work for non-Arch users but if you have clojure and swank-clojure installed then aside from changing paths or setting environment variables this ought to work for you. (Let me know if I'm wrong, of course.)<br><br>I've got my lisp implementations defined as follows:<br><pre lang="lisp">(setq slime-lisp-implementations<br>  '((ccl  ("ccl64"))<br>    (ecl  ("ecl"))<br>    (sbcl ("sbcl"))<br>    (sbcl-git ("/home/redline/builds/clbuild-dev/clbuild" "lisp"))))<br>(setq slime-default-lisp 'sbcl-git))</pre><br>If that looks completely alien to you or you don't already have some additional code in your .emacs for SLIME setup, you're in the wrong place. You probably just want an easy <a href="http://github.com/technomancy/emacs-starter-kit">Emacs starter kit</a> for clojure. Or, alternately, to look at <a href="http://github.com/redline6561/dotfiles/blob/master/.emacs">my full .emacs file</a>.<br><br>And the following big chunk to get swank-clojure and the rest set up:<br><pre lang="lisp">(add-to-list 'load-path "/usr/share/emacs/site-lisp/clojure-mode")<br>(require 'clojure-mode)<br>(add-to-list 'load-path "/usr/share/emacs/site-lisp/swank-clojure")<br>(require 'swank-clojure)<br>(add-hook 'clojure-mode-hook<br>          '(lambda ()<br>             (define-key clojure-mode-map "\C-c\C-e" 'lisp-eval-last-sexp)<br>             (define-key clojure-mode-map "\C-x\C-e" 'lisp-eval-last-sexp)))<br>(eval-after-load "slime"<br>  `(progn<br>     (require 'assoc)<br>     (setq swank-clojure-classpath<br>           (list "/usr/share/clojure/clojure.jar"<br>                 "/usr/share/clojure/clojure-contrib.jar"<br>                 "/usr/share/emacs/site-lisp/swank-clojure/src"))<br>     (aput 'slime-lisp-implementations 'clojure<br>           (list (swank-clojure-cmd) :init 'swank-clojure-init))))</pre><br>At this point, you should be able to start Emacs and then do M- - M- x slime, followed by enter and either the word clojure or one of your lisp implementations. Alternately, you could just do M-x slime and get sbcl-git. See? Not so bad after all.
