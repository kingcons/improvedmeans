;;;;;
title: HTDP Section 03
tags: HTDP, LISP, Self-Learning
date: 2008-05-19 13:43:29
format: html
;;;;;
As promised, here’s Section 03 with 04 soon to follow. Sections 03 and 04 are pretty unremarkable and the questions and answers are pretty self-explanatory. Again, you can check all the latest code in <a href="http://www.redlinernotes.com/code">my repo</a> by going to manifest, then books, htdp, and navigating to the various source files.<br><!--more--><br>Resources:<br>Read: Section <a href="http://www.htdp.org/2003-09-26/Book/curriculum-Z-H-6.html#node_chap_3">03</a><br>Watch: Nothing. To my knowledge there are no online lectures based around HTDP. Correct me if I’m wrong.<br>Checked against: Nothing. Again, to my knowledge there are no available sources to check your answers beyond the locked solutions on the official site and message boards. That’s one reason I’m excited about doing HTDP this way along with SICP. The plethora of SICP resources stand in contrast to an absolute dearth of resources for HTDP.<br><br>Exercises<br><br>3.1.1:<pre><br>(define (attendees ticket-price)<br>  (- 870 (* 150 ticket-price)))</pre><br><br>This function will give incorrect answers for negative values of ticket-price.<br><br>3.1.2:<pre><br>(define (revenue ticket-price)<br>  (* (attendees ticket-price) ticket-price))<br><br>(define (costs ticket-price)<br>  (+ 180 (* .04 (attendees ticket-price))))<br><br>(define (profit ticket-price)<br>  (- (revenue ticket-price) (costs ticket-price)))</pre><br><br>(profit 3) returns the best price which is 1063.2.<br><br>3.1.3:<br>Both program definitions return the same results for inputs of 3, 4<br>and 5.<br><br>3.1.4:<pre><br>(define (profit ticket-price)<br>  (- (revenue ticket-price)<br>     (cost ticket-price)))<br><br>(define (revenue ticket-price)<br>  (*  (attendees ticket-price) ticket-price))<br><br>(define (cost ticket-price)<br>  (* 1.5 (attendees ticket-price)))<br><br>(define (attendees ticket-price)<br>  (+ 120<br>     (* (/ 15 .10) (- 5.00 ticket-price))))<br><br>(define (profit price)<br>  (- (* (+ 120<br>	   (* (/ 15 .10)<br>	      (- 5.00 price)))<br>	price)<br>     (* 1.5<br>	   (+ 120<br>	      (* (/ 15 .10)<br>		 (- 5.00 price))))))</pre><br><br>Both programs return the same results but profit margins have changed based on the new costs. (max (profit 3) (profit 4) (profit 5) is now (profit 4).<br><br>3.2.1:<pre><br>(define fixed-costs 180)<br>(define price-per-attendee .04)<br>(define start-attendees 120)<br>(define attendees-per-dime 15)<br>(define dime .10)<br>(define start-price 5.00)</pre><br><br>3.3.1:<pre><br>(define inches-in-cm 2.54)<br>(define inches-in-ft 12)<br>(define feet-in-yard 3)<br>(define yards-in-rod 5.5)<br>(define rods-in-furlong 40)<br>(define furlongs-in-mile 8)<br><br>(define (inches->cm inches)<br>  (* inches-in-cm inches))<br><br>(define (feet->inches feet)<br>  (* inches-in-ft feet))<br><br>(define (yards->feet yards)<br>  (* feet-in-yard yards))<br><br>(define (rods->yards rods)<br>  (* yards-in-rod rods))<br><br>(define (furlongs->rods furlongs)<br>  (* rods-in-furlong furlongs))<br><br>(define (miles->furlongs miles)<br>  (* furlongs-in-mile miles))<br><br>(define (feet->cm feet)<br>  (inches->cm (feet->inches feet)))<br><br>(define (yards->cm yards)<br>  (feet->cm (yards->feet yards)))<br><br>(define (rods->inches rods)<br>  (feet->inches (yards->feet (rods->yards rods))))<br><br>(define (miles->feet miles)<br>  (yards->feet (rods->yards (furlongs->yards<br>                             (miles-furlongs miles)))))</pre><br><br>3.3.2:<pre><br>(define pi 3.14159)<br><br>(define (volume-cylinder radius height)<br>  (* pi (sqr radius) height))</pre><br><br>3.3.3:<pre><br>(define pi 3.14159)<br><br>(define (area-cylinder radius height)<br>  (* 2 pi radius (+ radius height)))</pre><br><br>3.3.4:<pre><br>(define (area-pipe inner-radius length thickness)<br>  (+ (* 2 pi length (+ inner-radius thickness))<br>      (* 2 (- (* pi (+ inner-radius thickness))<br>               (* pi inner-radius)))))<br><br>(define (area-pipe inner-radius length thickness)<br>  (+ (area-pipe-side inner-radius length thickness)<br>     (* 2 (area-pipe-ring inner-radius thickness))))<br><br>(define (area-pipe-side inner-radius length thickness)<br>  (* 2 pi length (+ inner-radius thickness)))<br><br>(define (area-pipe-ring inner-radius thickness)<br>  (* 2 (- (* pi (+ inner-radius thickness))<br>          (* pi inner-radius))))</pre><br><br>This problem reminds me of several in SICP in that the real difficulty with it is a misunderstanding of the question. Once you understand what is desired it’s pretty easy to bang the code out. This seems analogous to the idea that once you have a well-understood, well-specified set of requirements producing the code is trivial and that the requirements are the difficult part. Of course, this leads to blather about how good enough specifications (and UML Diagrams) are equivalent to code (which is bullshit). People forget that requirements change and that unambiguous well-specified requirements are often impossible.<br><br>3.3.5:<pre><br>(define (height time)<br>  (* .5 time (speed time)))<br><br>(define (speed time acceleration)<br>  (* time acceleration))</pre><br><br>3.3.6:<pre><br>(define (Celsius->Fahrenheit cels)<br>  (+ 32 (/ (* cels 9) 5)))<br><br>(I 32)<br>(Celsius->Fahrenheit (Fahrenheit->Celsius 32))<br>(Celsius->Fahrenheit (* (- 32 32) (/ 5 9)))<br>(Celsius->Fahrenheit (* 0 (/ 5 9)))<br>(Celsius->Fahrenheit 0)<br>(+ 32 (/ (* 0 9) 5))<br>(+ 32 (/ 0 5))<br>(+ 32 0)<br>32</pre><br><br>Plainly, these functions are inverses of each other though that should be self evident. Since they are inverses their composition returns the original input. The stepper returns the same results.<br><br>Well, that’s it for Section 03. It seems that the first 8 Sections at least deal with language primitives and fairly basic material. It certainly is easier to progress through HTDP relative to SICP but I have had the sense that I was learning more in SICP. We’ll see if this changes at all once I progress beyond the early sections though I haven’t decided whether I’ll keep going through HTDP or forge ahead on SICP.
