;;;;;
title: Still Kicking
tags: C, LISP, Programming, Project Euler, Self-Learning
date: 2008-01-30 19:26:42
format: html
;;;;;
Okay. So, I didn't get the week 2 recap posted last Friday and I'm not getting it posted today either. Before you folks go judging me and deciding I turned into a lazy bum I thought I should make some note of progress.<br><br>As I've mentioned, SICP isn't going as fast as I hoped but I won't skip a thing. If my schedule goes out the window so be it but this book is getting finished. Of course, hopefully I can conform somewhat to the schedule as well. There will be an update this weekend even if I'm not through section 1.2.<br><br>In the meantime, I thought that I'd post up something I've been working on during my lunch hour. Namely, <a href="http://www.projecteuler.net">Project Euler</a> code.  Project Euler is a website that has about 180 Programming Problems of escalating difficult. I've only devoted one lunch hour to it so far but it's been fun and I'd love to get through a quarter to half the problems this year.<br><br>The challenge for me I think will come from the math side as well as the programming and some of these I just won't be able to solve for a while. Better to challenge myself from both ends, right? The code's hidden behind a cut for those who don't want their eyes scarred by this programming nonsense. Also, I'll be improving these as I discover better programming formalisms. I'm also solving each problem in both C and Scheme. I want to solve each problem from two paradigms (or more) if possible.<!--more--><br><br><a href="http://projecteuler.net/index.php?section=problems&amp;id=1">Problem 1</a> in <a href="http://redlinernotes.com/code/euler/euler001.c">C</a>:<br><pre><br>//Project Euler Problem 1:<br>//Sum the numbers below 1000 divisible by 3 or 5.<br><br>#include <stdio.h><br><br>int main (void)<br>{<br>	int count;<br>	int sum = 0;<br>	for (count = 1; count &lt; 1000; count++){<br>		if ((count % 3 == 0) || (count % 5 == 0))<br>			sum += count;}<br>	printf ("The sum of all multiples of 3 or 5 below 1000 is %d.n", sum);<br>	return (0);<br>}</pre><br><a href="http://projecteuler.net/index.php?section=problems&amp;id=1">Problem 1</a> in <a href="http://redlinernotes.com/code/euler/euler001.scm">Scheme</a>:<br><pre><br>;;Project Euler Problem 1:<br>;;Sum the numbers below 1,000 divisible by 3 or 5.<br><br>(define (euler1 top)<br>  (define (iter count sum)<br>    (define (divides? n)<br>      (or (= (modulo n 3) 0) (= (modulo n 5) 0)))<br>    (cond ((= count top) sum)<br>	  ((divides? count) (iter (+ count 1) (+ sum count)))<br>	  (else (iter (+ count 1) sum))))<br>  (iter 1 0))<br>;Value: euler1<br></pre><br><a href="http://projecteuler.net/index.php?section=problems&amp;id=2">Problem 2</a> in <a href="http://redlinernotes.com/code/euler/euler002.c">C</a>:<br><pre><br>//Project Euler Problem 2:<br>//Sum the even-valued terms in the Fibonacci sequence below 1,000,000.<br><br>#include <stdio.h><br><br>int main (void)<br>{<br>	int a = 1;<br>	int b = 2;<br>	int temp, sum = 0;<br>	while (a &lt;= 1000000){<br>		if (a % 2 == 0){<br>			temp = b;<br>			b += a;<br>			sum += a;<br>			a = temp;}<br>		else{<br>			temp = b;<br>			b += a;<br>			a = temp;}}<br>	printf ("The sum of the even valued Fibonacci terms below 1,000,000 is %d.n", sum);<br>	return (0);<br>}</pre><br><a href="http://projecteuler.net/index.php?section=problems&amp;id=2">Problem 2</a> in <a href="http://redlinernotes.com/code/euler/euler002.scm">Scheme</a>:<br><pre><br>;;Project Euler Problem 2:<br>;;Sum the even-valued terms in the Fibonacci sequence below 1,000,000.<br><br>(define (euler2 top)<br>  (define (iter current sum count)<br>    (define (fib n)<br>      (cond ((< n 3) n)<br>	    (else (+ (fib (- n 1)) (fib (- n 2))))))<br>    (cond ((> current top) sum)<br>	  ((even? current) (iter (fib (+ count 1))<br>				 (+ sum current) (+ count 1)))<br>	  (else (iter (fib (+ count 1)) sum (+ count 1)))))<br>  (iter 0 0 0))<br>;Value: euler2<br></pre><br>That's all for now. Hope I get section 1.2 done by this weekend!
