;;;;;
title: Second Friday Linux Lesson
tags: Linux
date: 2007-05-25 19:59:00
format: html
;;;;;
So, I'm running a little short on time here and cutting things a bit close but I've been thinking it out and we've got some great stuff to cover. Additionally, there's more great news on the Linux front that I'll be covering in depth before Monday but that's for later.<br><br>For my second Linux Lesson we're using what I think is one of the more important concept-application distinctions between *nix systems (Mac included) and Windows. The concept of the hour: Permissions also known as User Access Control and numerous other things. I should also note that permissions is somewhat tied to the concept of a superuser and so I'll brush over that as well.<br><br>Permissions are, in effect, the Operating System restricting the user to only being able to do the things they need to do. The idea here is to keep from handing the common computer user (who may not be a nerd) a desert eagle or shotgun with which they might blow off their own foot. So, the user has permission to mess with things like their /home/username directory (which in *nix systems is analogous to the My Documents, My this, My that, of Windows). Windows effectively lacks a permissions structure pre-Vista <em>by default</em>. I'll probably write more on this later as a concept called Sensible Defaults but for now just remember that Linux wants to help you not hurt yourself by keeping your ability to do bad things to a minimum.<br><br>Now for the command, sudo. Occasionally, you my find that you need to do something that you don't have permission to do. This doesn't in itself mean that what you want to do is a bad idea. Just use common sense. If you're deleting files you don't recognize, maybe it's a bad idea. If it's installing an application you want it's probably okay. It just depends. If you open the terminal, covered in our <a href="http://redline6561.livejournal.com/159234.html">last lesson</a>, and type "sudo other_command_you_want_to_do" then the Operating System will let you run that one command as the superuser (which is simply a user with no permissions restrictions, i.e. the ability to do anything) and prompt you for your password. If you successfully enter your password (which shouldn't be too tricky as long as you remember it) it will let you run the one command you didn't have permissions for one time and that's it. That single command, in conjunction with all the other commands you'll end up using it with, will end up making your life easier over and over again. That's it for this week.
