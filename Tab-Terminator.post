;;;;;
title: Tab Terminator
tags: Hardware, Linkpost, Music, Personal, Programming
date: 2009-05-28 15:01:32
format: html
;;;;;
So, my browser is getting full again and I feel like clearing out the backlog. Prepare yourselves for a linkpost! Also, I'll try to arrange links by progressive nerdiness or some such.<br><br>NOTE: I've been terrible at keeping up with <a href="http://dongerz.livejournal.com/">other</a> <a href="http://trashed-ideas.net/">people's blogs</a>. If you're a friend of mine and I haven't read/commented in a while, I'm sincerely sorry. I'll be trying to catch up soon. Also, if you haven't heard about the underground sensation tearing up comedy clubs everywhere, <a href="http://www.facebook.com/video/video.php?v=100585721736&ref=nf">his name is Justin Morgan</a> and I'd keep your eyes peeled for him.<br><br>I've been hearing about a few albums that might be good and that I should check out as a consequence. They follow:<br>Doves - Kingdom of Rust<br>White Rabbits - It's Frightening<br>Night Control - Death Control<br>Danger Mouse and SparkleHorse - Dark Night of the Soul<br><br>It's occurred to me recently that I really kind of need a phone and I'm ready to take the fancy smartphone leap. I did a quick survey of the competition yesterday and narrowed my choices down to 4 models, none of which are released yet and one of which isn't even official. Don't ask me about all that. I'm sure we'll discuss this later. Here they are: <a href="http://en.wikipedia.org/wiki/Palm_Pre">Palm Pre</a>, <a href="http://en.wikipedia.org/wiki/Samsung_I7500">Samsung I7500</a>, <a href="http://en.wikipedia.org/wiki/Nokia_N97">Nokia N97</a>, and the <a href="http://www.mobilecrunch.com/2009/05/24/exclusive-everything-there-is-to-know-about-nokias-next-tablet/">Nokia N900</a> (because Rover is a very stupid name for a phone). Hopefully some official word about the N900 will break soon.<br><br>Okay, so there's an awesome site about <a href="http://en.literateprograms.org/LiteratePrograms:Welcome">Literate Programs here</a>. If you're looking for some code to read it's probably not a bad place to start.<br><br>There was recently a great discussion on proggit about <a href="http://www.reddit.com/r/programming/comments/8lfx7/what_emacs_commands_do_you_use_most_and_find_most/">most used emacs commands</a>. That's some handy stuff to keep track of. Between that and the emacs-fu blog I referenced two posts back I'll be learning a good while.<br><br>Considering that it's old news, there's still a fair amount of <a href="http://www.reddit.com/r/programming/comments/8772y/why_mit_switched_from_scheme_to_python/c08fv0a">hollering about MIT</a> <a href="http://lambda-the-ultimate.org/node/3312">switching from Scheme and SICP</a> <a href="http://wadler.blogspot.com/2009/05/6001-rip.html">to Python</a> and <a href="http://www.reddit.com/r/programming/comments/8np9t/sicp_has_its_own_agenda_convincing_the_reader/">continuing debate on the value of SICP</a>. Indeed, it's not the holy bible and grauenwolf is getting a too many downvotes. He makes a number of very good points. I haven't taken time to read through the whole thread (should I?) but psnively seems to have the right idea to me, as usual.<br><br>O'Reilly Radar put up a pretty good article on the things HTML5 will enable and the resulting <a href="http://radar.oreilly.com/2009/05/google-bets-big-on-html-5.html">scramble to the finish</a> by a lot of big players.<br><br>There was a good discussion on the Haskell reddit about <a href="http://www.reddit.com/r/haskell/comments/8l5ud/should_ghc_wall_be_the_default/">making -Wall the default for GHC</a>, I chimed in because there didn't seem to be enough discussion to suit my tastes and though I'm an idiot I'd at least learn something. Learn I did and I'm wondering if <a href="http://hackage.haskell.org/trac/ghc/ticket/1968">this bug</a> is one of those referenced in response to my comment. <br><br>Other random Haskell stuff: <a href="http://www.reddit.com/r/haskell/comments/8m1gj/our_branding_sucks_monads_are_okay_after_a_bit/">Recommendations to learn monads after functors, monoids, etc</a> from Conal Elliott, a <a href="http://www.haskell.org/pipermail/haskell-cafe/2008-February/039639.html">curious DSL</a> from Sir Kiselyov, a <a href="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/adaptive-containers">neat package of adaptive datatypes</a> from Dons, an <a href="http://flygdynamikern.blogspot.com/2009/05/benchmarking-amazon-ec2-with-ghc.html">interesting article on benchmarking EC2 with GHC compile times</a> (which would be more relevant if I was trying to put off buying a computer or looking into working remotely) and some Haskell responding to Factor that <a href="http://www.reddit.com/r/programming/comments/88oln/factor_makes_you_write_better_code/c08kdnn">I wish I could read</a>.<br><br>Three last things: I found this cool programming problems blog that offers small, fun puzzles like <a href="http://projecteuler.net/">Project Euler</a>. It's called <a href="http://programmingpraxis.wordpress.com/">Programming Praxis</a>. There's a really neat paper that's over my head called <a href="http://lambda-the-ultimate.org/node/3319">Types are Calling Conventions</a> which makes a little sense but I wish it made more. And lastly, some thinking on the <a href="http://r6.ca/blog/20090511T013939Z.html">productivity boost of Object Oriented Languages</a> that harkened back to <a href="http://winterkoninkje.livejournal.com/58607.html">some things Wren Thorton wrote</a> and so on. Later!
